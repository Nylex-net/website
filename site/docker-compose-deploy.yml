version: "3.9"

services:
  nylex:
    image: django-nylex
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
      # - media:/vol/media
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - MS_CLIENT_ID=${MS_CLIENT_ID}
      - MS_TENANT_ID=${MS_TENANT_ID}
      - MS_SECRET_VAL=${MS_SECRET_VAL}
      - DOMAIN=${DOMAIN}
      - OIDC_AUTHENTICATION_CALLBACK_URL=${OIDC_AUTHENTICATION_CALLBACK_URL}
    depends_on:
      - db
    networks:
      - webnet

  db:
    # image: postgres:13-alpine
    build:
      context: ./db
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - webnet

  proxy:
    # image: nginx-proxy
    build:
      context: ./proxy
    restart: always
    depends_on:
      - nylex
    ports:
      - 80:80
      - 443:443
    volumes:
      - static-data:/vol/static
      # - media:/vol/media
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    environment:
      - DOMAIN=${DOMAIN}
    labels:
      kompose.service.expose: "ws-henry.example.com"
    networks:
      - webnet

# Comment out certbot configurations until it works.
  certbot:
    image: certbot
    build:
      context: ./certbot
    # command: echo "Skipping..."
    restart: always
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy
    networks:
      - webnet

volumes:
  postgres-data:
  static-data:
  # media:
  certbot-web:
  proxy-dhparams:
  certbot-certs:

networks:
  webnet: